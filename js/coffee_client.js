// Generated by CoffeeScript 1.3.3
(function() {
  var MyApp, MyModels, MyRouters, MyViews;

  MyModels = new Object();

  MyRouters = new Object();

  MyViews = new Object();

  MyApp = new Object();

  $.ajaxSetup({
    cache: false,
    crossDomain: true,
    dataType: "jsonp"
  });

  MyModels.Graphic = Backbone.Model.extend({
    dataSet: null,
    x_type: null,
    y_type: null,
    urlRoot: "http://localhost:3000/graphics"
  });

  MyModels.Graphics = Backbone.Collection.extend({
    model: MyModels.Graphic,
    url: function() {
      return "http://localhost:3000/graphics";
    }
  });

  MyRouters.GraphicsController = Backbone.Router.extend({
    activeView: null,
    routes: {
      "graphics": "list",
      "graphics/add": "add",
      "graphics/edit/:id": "edit",
      "graphics/delete/:id": "delete"
    },
    list: function() {
      return this._listView(); 
    },
    add: function() {
      return this._addView();
    },
    edit: function(id) {
      return this._editView(id);
    },
    "delete": function(id) {
      return this._deleteView(id);
    },
    newGraphic: function(graphic) {
      var to_save;
      to_save = new MyModels.Graphic(graphic);
      return to_save.save({}, {
        success: function(model, response) {
          return MyApp.graphicsController.navigate("graphics", {
            trigger: true
          });
        },
        error: function() {
          return alert("error creating");
        }
      });
    },
    updateGraphic: function(graphic) {
      return graphic.save({}, {
        success: function(model, response) {
          return MyApp.graphicsController.navigate("graphics", {
            trigger: true
          });
        },
        error: function() {
          return alert("error updating");
        }
      });
    },
    _listView: function() {
      var that;
      this._showElement($(".add-graphics"), false);
      this._showElement($(".edit-graphics"), false);
      this._showElement($(".graphics-list"), true);
      that = this;
      return new MyModels.Graphics().fetch({
        success: function(model, response) {
          that.activeView = new MyViews.GraphicsView({
            el: $(".graphics-list"),
            collection: model,
            controller: that
          });
          return that.activeView.render();
        },
        error: function() {
          return alert("graphics's fetch error");
        }
      });
    },
    _addView: function() {
      var that;
      this._showElement($(".graphics-list"), true);
      this._showElement($(".edit-graphics"), false);
      this._showElement($(".add-graphics"), true);
      that = this;
      this.activeView = new MyViews.GraphicAddView({
        el: $(".add-graphics"),
        controller: that
      });
      return this.activeView.render();
    },
    _deleteView: function(id) {
      var graphic;
      graphic = new MyModels.Graphic({
        id: id
      });
      return graphic.destroy({
        success: function(model, response) {
          return MyApp.graphicsController.navigate("graphics", {
            trigger: true
          });
        },
        error: function() {
          return MyApp.graphicsController.navigate("graphics", {
            trigger: true
          });
        }
      });
    },
    _editView: function(id) {
      var graphic, that;
      this._showElement($(".graphics-list"), true);
      this._showElement($(".add-graphics"), false);
      this._showElement($(".edit-graphics"), true);
      graphic = new MyModels.Graphic({
        id: id
      });
      that = this;
      return graphic.fetch({
        success: function(model, response) {
          that.activeView = new MyViews.GraphicEditView({
            el: $(".edit-graphics"),
            model: model,
            edited: graphic,
            controller: that
          });
          return that.activeView.render();
        },
        error: function(data, msg) {
          return alert("graphic's fetch error: " + msg + " [" + JSON.stringify(data) + "]");
        }
      });
    },
    _showElement: function(e, show) {
      if (show) {
        e.removeClass("not-visible");
        return e.addClass("visible");
      } else {
        e.removeClass("visible");
        return e.addClass("not-visible");
      }
    }
  });

  MyApp.graphicsController = new MyRouters.GraphicsController();

  MyViews.GraphicView = Backbone.View.extend({
    tagName: "li",
    render: function() {
      $(this.el).html("<div style=\"height:400px;float:left;\"> <img src=\"css/img/reload-button.png\" id=\"" + this.model.toJSON().id * 200 + "\" class=\"reload\" style=\"width:50px; height:50px; position:absolute; margin-left:310px;margin-top:265px; z-index:5;\"> </img><img src=\"css/img/close-button.png\" id=\"" + this.model.toJSON().id * 100 + "\" class=\"dess\" style=\"width:60px; height:60px; position:absolute; margin-left:300px;padding-top:5px; z-index:5;\"> </img><div id=\"" + this.model.toJSON().id + "\" style=\"width:300px;height:300px; float:left; margin-left:40px; z-index:1;  margin-top:30px;\" class=\"graphics\">  </div> </div>");
      return this;
    }
  });

  MyViews.GraphicsView = Backbone.View.extend({
    tagName: "ul",
    className: "graphics-list",
    controller: null,
    render: function() {
      var that;
      $(this.el).empty();
      that = this;
      this.collection.each(function(graphic) {
        var graphicView;
        graphicView = new MyViews.GraphicView({
          model: graphic
        });
        $(that.el).append(graphicView.render().el);
        return $.plot($("#" + graphic.id), [graphic.toJSON().dataSet]);
      });
      $(".reload").mouseover(function() {
        return $(this).attr("src", "css/img/reload-button-hover.png");
      });
      $(".reload").mouseout(function() {
        return $(this).attr("src", "css/img/reload-button.png");
      });
      $(".reload").click(function() {
        return MyApp.graphicsController.navigate("graphics/edit/" + this.id / 200, {
          trigger: true
        });
      });
      $(".dess").click(function() {
        return MyApp.graphicsController.navigate("graphics/delete/" + this.id / 100, {
          trigger: true
        });
      });
      $(".dess").mouseover(function() {
        return $(this).attr("src", "css/img/close-button-hover.png");
      });
      $(".dess").mouseout(function() {
        return $(this).attr("src", "css/img/close-button.png");
      });
         $('html, body').animate({
         scrollTop: $("#Editor").offset().top
     }, 2000);

      return this;
    }
  });

  MyViews.GraphicAddView = Backbone.View.extend({
    tagName: "div",
    template: _.template($("#graphic-add").html()),
    render: function() {
      $("#Editor").html(this.template());
      $("#panel").fadeIn("slow");
      $("#panel_close").mouseover(function() {
        return $(this).attr("src", "css/img/close-button-hover.png");
      });
      $("#panel_close").mouseout(function() {
        return $(this).attr("src", "css/img/close-button.png");
      });
      $("#panel_close").click(function() {
        $("#panel").fadeOut("slow");
        $("#Editor").html("<img src=\"css/img/plus-button.png\" style=\"width:100px;height:100px;margin-top:100px;margin-left:40px;\"> </img>");
        $("#Editor img").mouseover(function() {
          return $(this).attr("src", "css/img/plus-button_hover.png");
        });
        $("#Editor img").mouseout(function() {
          return $(this).attr("src", "css/img/plus-button.png");
        });
        $("#Editor img").click(function() {
          return MyApp.graphicsController.navigate("graphics/add", {
            trigger: true
          });
        });
        return MyApp.graphicsController.navigate("graphics", {
          trigger: true
        });
      });
      return this;
    },
    add: function() {
      this.options.controller.newGraphic({
        x_type: $("#x_set").val(),
        y_type: $("#y_set").val(),
        dataSet: null
      });
      $("#Editor").html("<img src=\"css/img/plus-button.png\" style=\"width:100px;height:100px;margin-top:100px;margin-left:40px;\"> </img>");
      $("#Editor img").mouseover(function() {
        return $(this).attr("src", "css/img/plus-button_hover.png");
      });
      $("#Editor img").mouseout(function() {
        return $(this).attr("src", "css/img/plus-button.png");
      });
      return $("#Editor img").click(function() {
        return MyApp.graphicsController.navigate("graphics/add", {
          trigger: true
        });
      });
    }
  });

  MyViews.GraphicEditView = Backbone.View.extend({
    tagName: "div",
    template: _.template($("#graphic-add").html()),
    render: function() {
      $("#Editor").html(this.template());
      $("#panel").fadeIn("slow");
      $("#add-button").val("Изменить");
      $("#add-button").click(function() {
        
        $("#Editor img").mouseover(function() {
          return $(this).attr("src", "css/img/plus-button_hover.png");
        });
        $("#Editor img").mouseout(function() {
          return $(this).attr("src", "css/img/plus-button.png");
        });
        $("#Editor img").click(function() {
          return MyApp.graphicsController.navigate("graphics/add", {
            trigger: true
          });
        });
         MyApp.graphicsController.activeView.update();
         $("#Editor").html("<img src=\"css/img/plus-button.png\" style=\"width:100px;height:100px;margin-top:100px;margin-left:40px;\"> </img>");
      });
      $("#panel_close").mouseover(function() {
        return $(this).attr("src", "css/img/close-button-hover.png");
      });
      $("#panel_close").mouseout(function() {
        return $(this).attr("src", "css/img/close-button.png");
      });
      $("#panel_close").click(function() {
        $("#Editor").html("<img src=\"css/img/plus-button.png\" style=\"width:100px;height:100px;margin-top:100px;margin-left:40px;\"> </img>");
        $("#Editor img").mouseover(function() {
          return $(this).attr("src", "css/img/plus-button_hover.png");
        });
        $("#Editor img").mouseout(function() {
          return $(this).attr("src", "css/img/plus-button.png");
        });
        return $("#Editor img").click(function() {
          return MyApp.graphicsController.navigate("graphics/add", {
            trigger: true
          });
        });
      });
      return this;
    },
    update: function() {
      if (this.options.edited) {
        this.options.edited.set("x_type", $("#x_set").val());
        this.options.edited.set("y_type", $("#y_set").val());
        this.options.edited.set("dataSet", [[2,0]]);
        return this.options.controller.updateGraphic(this.options.edited);
      }
    }
  });

  $("#list").click(function() {
    return MyApp.graphicsController.navigate("graphics", {
      trigger: true
    });
  });

  $("#Editor img").click(function() {
    return MyApp.graphicsController.navigate("graphics/add", {
      trigger: true
    });
  });

  $("#add-button").live("click", function() {
    return MyApp.graphicsController.activeView.add();
  });

  $("#edit-button").live("click", function() {
    return MyApp.graphicsController.activeView.update();
  });

  $("#Editor img").mouseover(function() {
    return $(this).attr("src", "css/img/plus-button_hover.png");
  });

  $("#Editor img").mouseout(function() {
    return $(this).attr("src", "css/img/plus-button.png");
  });

  $(document).ready(function() {
    return MyApp.graphicsController.navigate("graphics", {
      trigger: true
    });
  });

  Backbone.history.start();

}).call(this);
